#pragma once

#include "GameObject.h"
#include <memory> // Для std::unique_ptr (умный указатель)

class Projectile;

class Tank : public GameObject {
public:
    Tank(float startX, float startY, int startDir);

    // 'override' - это подсказка компилятору, что мы намеренно переопределяем метод базового класса.

    void update(float deltaTime) override;
    void draw() override;
    bool isAlive() const override;


    void takeDamage(int dmg);

    /*
     Пытается выстрелить.
     @return Умный указатель на новый снаряд, если выстрел возможен (нет перезарядки), иначе nullptr.
    */
    std::unique_ptr<Projectile> fire();

    // Геттер для здоровья
    int getHealth() const { return health; }

protected:

    int health = 1;
    int damage = 1;
    float speed = 8.0f;
    bool isMoving = false;

    // Таймер перезарядки, чтобы танк не стрелял очередью
    float fireCooldown = 0.0f;
    const float fireRate = 0.5f; // 1 выстрел каждые 0.5 сек (условно)
};